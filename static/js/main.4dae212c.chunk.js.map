{"version":3,"sources":["components/Button.js","components/Header.js","components/Sources.js","App.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","prototype","PropTypes","string","func","Header","title","onButtonClick","showChart","useState","showMenu","setShowMenu","stateEnum","all","bar","line","sources","icon","faBars","prototypes","isRequired","Sources","source","map","s","annotations","source_name","source_description","href","dataset_link","target","options","maintainAspectRatio","App","data","setData","currentState","setSate","setSource","fetchData","a","fetch","then","res","json","useEffect","getData","dataFromServer","createChartData","labels","obj","Year","datasets","label","Nation","Population","newState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4dae212c.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({color, text, onClick}) => {\n  return (\n    <button \n        onClick={onClick}\n        style={{backgroundColor: color}} \n        className='btn'>\n            {text}\n        </button>\n  )\n}\n\nButton.defaultProps = {\n  color: '#3ec4f3'\n}\n\nButton.prototype = {\n  text: PropTypes.string,\n  color: PropTypes.string,\n  onClick: PropTypes.func,\n}\n\nexport default Button\n","import PropTypes from 'prop-types'\nimport Button from './Button'\nimport {stateEnum} from '../App'\nimport { useState } from 'react'\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst Header = ({title, onButtonClick, showChart}) => {\n  const [showMenu, setShowMenu] = useState(false)\n    \n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n            {/* <div className={ showMenu ? '' : 'header-container-mb'}> */}\n            <div className={showMenu ? 'btn-container visible' : 'btn-container'}>\n              <Button \n                  text='Show All' \n                  onClick={() => onButtonClick(stateEnum.all)} />\n              <Button \n                text='Show Bar'\n                onClick={() => onButtonClick(stateEnum.bar)}\n              />\n              <Button \n                text='Show Line'\n                onClick={() => onButtonClick(stateEnum.line)}\n              />\n            </div>\n            <Button \n                text='Sources'\n                onClick={() => onButtonClick(stateEnum.sources)}\n              />\n              <FontAwesomeIcon className='icon'\n                icon={faBars}\n                onClick={() => setShowMenu(!showMenu)}\n              />\n            {/* </div> */}\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Population Data'\n}\n\nHeader.prototypes = {\n    title: PropTypes.string.isRequired,\n}\n\nexport default Header\n","import React from 'react'\n\nconst Sources = (source) => {\n  if(source.source === null)\n    return <></>\n  return (\n    source.source.map((s) => \n      <div className='chart'>\n        <h2>{s.annotations.source_name}</h2>\n        <p>{s.annotations.source_description}</p>\n        <a href={s.annotations.dataset_link} target='_blank'>Link to the Dataset</a>\n      </div>\n  )\n  )\n}\n\nexport default Sources\n","import { useState, useEffect } from 'react';\nimport './App.css'\nimport Header from './components/Header';\nimport { Line, Bar} from 'react-chartjs-2'\nimport Sources from './components/Sources';\n\n\nconst options={\n  maintainAspectRatio: false,\n}\n\nexport const stateEnum = {\n  all: 'all',\n  bar: 'bar',\n  line: 'line',\n  sources: 'sources',\n}\n\nconst App = () => {\n  const [data, setData] = useState({})\n  const [currentState, setSate] = useState(stateEnum.all)\n  const [source, setSource] = useState(null)\n\n  // Fetch Tasks\n  const fetchData = async () => {\n    return await fetch('https://datausa.io/api/data?drilldowns=Nation&measures=Population')\n      .then((res) => res.json())\n  }\n\n  useEffect(() => {\n    const getData = async () => {\n      const dataFromServer = await fetchData()\n      setData(createChartData(dataFromServer))\n      setSource(dataFromServer.source)\n    }\n\n    getData()\n  })\n\n  const createChartData = (res) => {\n    if(res === {})\n      return {}\n    return {\n      labels: res.data.map((obj) => obj.Year),\n      datasets: [{\n          label: `${res.data[0].Nation} Population`,\n          data: res.data.map((obj) => obj.Population),\n          backgroundColor: [\n              '#3ec4f3'\n          ],\n      }]\n    }\n  }\n\n  const onClick = (newState) => {\n    setSate(newState)\n  }\n  \n  return (\n    <div className=\"App\">\n      <Header onButtonClick={onClick} />\n      <div className='container'>\n        {\n          {\n            'all' : \n              <>\n                <Line className='chart' data={data} options={options}/>\n                <Bar className='chart' data={data} options={options}/>\n              </>,\n            'bar' : <Bar className='chart' data={data} options={options}/>,\n            'line': <Line className='chart' data={data} options={options}/>,\n            'sources': <Sources source={source} />\n          }[currentState]\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}